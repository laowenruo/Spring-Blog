<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.mashiro.mapper.BlogMapper">

    <resultMap id="blog" type="cn.isbut.entity.Blog">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="content" column="content"/>
        <result property="description" column="description"/>
        <result property="published" column="is_published"/>
        <result property="recommend" column="is_recommend"/>
        <result property="appreciation" column="is_appreciation"/>
        <result property="commentEnabled" column="is_comment_enabled"/>
        <result property="top" column="is_top"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="views" column="views"/>
        <association property="user" javaType="cn.isbut.entity.User">
            <id property="id" column="user_id"/>
            <result property="username" column="username"/>
            <result property="nickname" column="nickname"/>
            <result property="avatar" column="avatar"/>
            <result property="email" column="email"/>
            <result property="createTime" column="user_create_time"/>
            <result property="updateTime" column="user_update_time"/>
            <result property="role" column="role"/>
        </association>
        <association property="category" javaType="cn.isbut.entity.Category">
            <id property="id" column="category_id"/>
            <result property="name" column="category_name"/>
        </association>
        <collection property="tags" ofType="cn.isbut.entity.Tag">
            <id property="id" column="tag_id"/>
            <result property="name" column="tag_name"/>
        </collection>
    </resultMap>

    <resultMap id="searchBlog" type="cn.isbut.vo.SearchBlogVO">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
    </resultMap>

    <resultMap id="blogIdAndTitle" type="cn.isbut.vo.BlogIdAndTitleVO">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
    </resultMap>

    <resultMap id="newBlog" type="cn.isbut.vo.NewBlogVO">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <resultMap id="blogInfo" type="cn.isbut.vo.BlogInfoVO">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="description" column="description"/>
        <result property="createTime" column="create_time"/>
        <result property="views" column="views"/>
        <result property="top" column="is_top"/>
        <association property="category" javaType="cn.isbut.entity.Category">
            <result property="name" column="category_name"/>
        </association>
    </resultMap>

    <resultMap id="archiveBlog" type="cn.isbut.vo.ArchiveBlogVO">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="day" column="create_day"/>
    </resultMap>

    <resultMap id="randomBlog" type="cn.isbut.vo.RandomBlogVO">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="createTime" column="create_time"/>
    </resultMap>

    <resultMap id="blogDetail" type="cn.isbut.vo.BlogDetailVO">
        <id property="id" column="id"/>
        <result property="title" column="title"/>
        <result property="firstPicture" column="first_picture"/>
        <result property="content" column="content"/>
        <result property="appreciation" column="is_appreciation"/>
        <result property="commentEnabled" column="is_comment_enabled"/>
        <result property="top" column="is_top"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="views" column="views"/>
        <association property="category" javaType="cn.isbut.entity.Category">
            <result property="name" column="category_name"/>
        </association>
        <collection property="tags" ofType="cn.isbut.entity.Tag">
            <result property="name" column="tag_name"/>
        </collection>
    </resultMap>

    <resultMap id="categoryBlogCount" type="cn.isbut.vo.CategoryBlogCountVO">
        <id property="id" column="category_id"/>
        <result property="value" column="blog_count"/>
    </resultMap>

    <!--新增博客-->
    <insert id="saveBlog" parameterType="cn.isbut.dto.BlogDTO" useGeneratedKeys="true" keyProperty="id">
        insert into tb_blog(title, first_picture, content, description, is_published, is_recommend, is_appreciation, is_comment_enabled,
                           is_top, create_time, update_time, views, category_id, user_id)
        values (#{title}, #{firstPicture}, #{content}, #{description}, #{published}, #{recommend}, #{appreciation}, #{commentEnabled},
                #{top}, #{createTime}, #{updateTime}, #{views}, #{category.id}, #{user.id})
    </insert>

    <!--新增同步blog_tag表-->
    <insert id="saveBlogAndTag">
        insert into tb_blog_tags(tag_id, blog_id) values (#{tagId}, #{blogId})
    </insert>

    <!--删除博客-->
    <delete id="deleteBlogById">
        delete from tb_blog where id = #{id}
    </delete>

    <!--删除同步blog_tag表-->
    <delete id="deleteBlogAndTagByBlogId">
        delete from tb_blog_tags where blog_id = #{id};
    </delete>

    <!--编辑更新博客-->
    <update id="updateBlog" parameterType="cn.isbut.dto.BlogDTO">
        update tb_blog set title=#{title}, first_picture=#{firstPicture}, content=#{content}, description=#{description},
                           is_recommend=#{recommend}, is_published=#{published}, is_appreciation=#{appreciation}, is_comment_enabled=#{commentEnabled},
                           is_top=#{top}, create_time=#{createTime}, update_time=#{updateTime}, views=#{views},
                           category_id=#{category.id}, user_id=#{user.id}
        where id=#{id}
    </update>

    <!--更新博客推荐状态-->
    <update id="updateBlogRecommendById">
        update tb_blog set is_recommend=#{recommend} where id=#{blogId}
    </update>

    <!--更新博客置顶状态-->
    <update id="updateBlogTopById">
        update tb_blog set is_top=#{top} where id=#{blogId}
    </update>

    <!--更新博客可见性状态-->
    <update id="updateBlogVisibilityById">
        update tb_blog set is_appreciation=#{bv.appreciation}, is_recommend=#{bv.recommend}, is_comment_enabled=#{bv.commentEnabled},
                        is_top=#{bv.top}, is_published=#{bv.published}
        where id=#{blogId}
    </update>

    <!--根据Id查询博客，用于编辑博客-->
    <select id="getBlogById" resultMap="blog">
        select b.id, b.title, b.first_picture, b.content, b.description, b.is_recommend, b.is_published, b.is_appreciation,
               b.is_comment_enabled, b.is_top, b.create_time, b.update_time, b.views,
               c.id as category_id, c.category_name,
               bt.tag_id as tag_id, t.tag_name as tag_name
        from (((tb_blog as b left join tb_category as c on b.category_id=c.id)
            left join tb_blog_tags as bt on b.id=bt.blog_id)
            left join tb_tag as t on bt.tag_id=t.id)
        where b.id=#{id}
    </select>

    <select id="getBlogListByTitleAndCategoryId" resultMap="blog">
        <bind name="titlePattern" value="'%' + title + '%'"/>
        select b.id, b.title, b.first_picture, b.create_time, b.update_time, b.is_published, b.is_recommend, b.is_appreciation,
        b.is_comment_enabled, b.is_top,
        c.id as category_id, c.category_name
        from tb_blog as b left join tb_category as c on b.category_id=c.id
        <where>
            <if test="title!=null and title!=''">
                b.title like #{titlePattern}
            </if>
            <if test="categoryId!=null">
                and b.category_id=#{categoryId}
            </if>
        </where>
    </select>

    <!--根据分类名称显示公开博客列表-->
    <select id="getBlogInfoListByCategoryNameAndIsPublished" resultMap="blogInfo">
        select b.id, b.title,b.first_picture, b.description, b.is_top, b.create_time, b.views, c.category_name
        from tb_category as c left join tb_blog as b on b.category_id=c.id
        where c.category_name=#{categoryName} and b.is_published = true
    </select>

    <!--根据标签名称显示公开博客列表-->
    <select id="getBlogInfoListByTagNameAndIsPublished" resultMap="blogInfo">
        select b.id, b.title,b.first_picture, b.description, b.is_top, b.create_time, b.views, c.category_name
        from ((
            (tb_tag as t left join tb_blog_tags as bt on t.id=bt.tag_id) left join tb_blog as b on bt.blog_id=b.id)
            left join tb_category as c on b.category_id=c.id)
        where t.tag_name=#{tagName} and b.is_published = true
    </select>

    <!--按关键字根据文章内容搜索博客文章-->
    <select id="getSearchBlogListByQueryAndIsPublished" resultMap="searchBlog">
        <bind name="queryPattern" value="'%' + query + '%'"/>
        select id, title, content
        from tb_blog
        where is_published = true and content like #{queryPattern}
    </select>

    <!--查询最新公开博客-->
    <select id="getNewBlogListByIsPublished" resultMap="newBlog">
        select id, title, first_picture, create_time
        from tb_blog
        where is_published = true
        order by create_time desc
    </select>

    <!--查询所有博客id和title,根据创建时间排序-->
    <select id="getBlogIdAndTitleList" resultMap="blogIdAndTitle">
        select id, title from tb_blog order by create_time desc
    </select>

    <!--查询公开博客的简要信息-->
    <select id="getBlogInfoListByIsPublished" resultMap="blogInfo">
        select b.id, b.title,b.first_picture, b.description, b.is_top, b.create_time, b.views, c.category_name
        from tb_blog as b left join tb_category as c on b.category_id=c.id
        where b.is_published = true
    </select>

    <!--按id查询公开博客详细信息-->
    <select id="getBlogByIdAndIsPublished" resultMap="blogDetail">
        select b.id, b.title,b.first_picture, b.content, b.is_appreciation, b.is_comment_enabled, b.is_top,
               b.create_time, b.update_time, b.views,
               c.category_name,
               t.tag_name as tag_name
        from (((tb_blog as b left join tb_category as c on b.category_id=c.id) left join tb_blog_tags as bt on b.id=bt.blog_id) left join tb_tag as t on bt.tag_id=t.id)
        where b.id=#{id} and b.is_published=true
    </select>

    <!--查询公开博客年月List-->
    <select id="getGroupYearMonthByIsPublished" resultType="java.lang.String">
        select date_format(create_time, "%Y年%m月")
        from tb_blog
        where is_published=true
        group by date_format(create_time, "%Y年%m月")
        order by date_format(create_time, "%Y年%m月") desc
    </select>

    <!--用过年份查找公开博客-->
    <select id="getArchiveBlogListByYearMonthAndIsPublished" resultMap="archiveBlog">
        select id, title, date_format(create_time, "%d日") as create_day
        from tb_blog
        where date_format(create_time, "%Y年%m月")=#{yearMonth} and is_published=true
        order by create_time desc
    </select>

    <!--查询随机的公开且推荐文章-->
    <select id="getRandomBlogListByLimitNumAndIsPublishedAndIsRecommend" resultMap="randomBlog">
        select id, title, create_time, first_picture
        from tb_blog
        where is_published=true and is_recommend=true
        order by rand() limit #{limitNum}
    </select>

    <!--查询所有文章的浏览量-->
    <select id="getBlogViewsList" resultType="cn.isbut.dto.BlogViewDTO">
        select id, views from tb_blog
    </select>

    <select id="getTitleByBlogId" resultType="java.lang.String">
        select title from tb_blog where id = #{id}
    </select>

    <select id="getTitleAndCreateTime" resultType="cn.isbut.vo.ArchiveInfoVO">
        select id,title,create_time from tb_blog
    </select>

    <!--更新博客阅读次数-->
    <update id="updateViews">
        update tb_blog set views = #{views} where id = #{blogId};
    </update>

    <!--获取博客总访问量-->
    <select id="getViews" resultType="java.lang.Integer">
        SELECT SUM(views) FROM tb_blog
    </select>

    <!--查询博客总数-->
    <select id="countBlog" resultType="java.lang.Integer">
        select count(*) from tb_blog
    </select>

    <!--查询公开博客总数-->
    <select id="countBlogByIsPublished" resultType="java.lang.Integer">
        select count(*) from tb_blog where is_published=true
    </select>

    <!--按分类id查询博客数量-->
    <select id="countBlogByCategoryId" resultType="java.lang.Integer">
        select count(*) from tb_blog where category_id=#{categoryId}
    </select>

    <!--按标签id查询博客数量-->
    <select id="countBlogByTagId" resultType="java.lang.Integer">
        select count(*) from tb_blog_tags where tag_id=#{tagId}
    </select>

    <!--查询博客是否启用评论-->
    <select id="getCommentEnabledByBlogId" resultType="java.lang.Boolean">
        select is_comment_enabled from tb_blog where id=#{blogId}
    </select>

    <!--查询博客是否公开-->
    <select id="getPublishedByBlogId" resultType="java.lang.Boolean">
        select is_published from tb_blog where id=#{blogId}
    </select>

    <!--查询每个分类的博客数量-->
    <select id="getCategoryBlogCountList" resultMap="categoryBlogCount">
        select category_id, count(category_id) as blog_count from tb_blog group by category_id
    </select>

</mapper>